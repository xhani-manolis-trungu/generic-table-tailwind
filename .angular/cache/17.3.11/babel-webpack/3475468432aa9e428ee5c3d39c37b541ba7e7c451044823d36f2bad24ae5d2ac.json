{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class TableFilterService {\n  filter(data, searchText, columns) {\n    if (!searchText) return data;\n    const searchLower = searchText.toLowerCase();\n    return data.filter(item => columns.some(col => col.filterable && col.key in item && String(item[col.key]).toLowerCase().includes(searchLower)));\n  }\n  static {\n    this.ɵfac = function TableFilterService_Factory(t) {\n      return new (t || TableFilterService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TableFilterService,\n      factory: TableFilterService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["TableFilterService","filter","data","searchText","columns","searchLower","toLowerCase","item","some","col","filterable","key","String","includes","factory","ɵfac","providedIn"],"sources":["/home/xhani-manolis-trungu/generic-table-tailwind/src/app/components/generic-table/services/table-filter.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { TableColumn } from '../interfaces/column.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableFilterService {\n  filter<T extends object>(data: T[], searchText: string, columns: TableColumn<T>[]): T[] {\n    if (!searchText) return data;\n    \n    const searchLower = searchText.toLowerCase();\n    return data.filter(item => \n      columns.some(col => \n        col.filterable && \n        col.key in item && \n        String((item as any)[col.key]).toLowerCase().includes(searchLower)\n      )\n    );\n  }\n}"],"mappings":";AAMA,OAAM,MAAOA,kBAAkB;EAC7BC,MAAMA,CAAmBC,IAAS,EAAEC,UAAkB,EAAEC,OAAyB;IAC/E,IAAI,CAACD,UAAU,EAAE,OAAOD,IAAI;IAE5B,MAAMG,WAAW,GAAGF,UAAU,CAACG,WAAW,EAAE;IAC5C,OAAOJ,IAAI,CAACD,MAAM,CAACM,IAAI,IACrBH,OAAO,CAACI,IAAI,CAACC,GAAG,IACdA,GAAG,CAACC,UAAU,IACdD,GAAG,CAACE,GAAG,IAAIJ,IAAI,IACfK,MAAM,CAAEL,IAAY,CAACE,GAAG,CAACE,GAAG,CAAC,CAAC,CAACL,WAAW,EAAE,CAACO,QAAQ,CAACR,WAAW,CAAC,CACnE,CACF;EACH;;;uBAZWL,kBAAkB;IAAA;EAAA;;;aAAlBA,kBAAkB;MAAAc,OAAA,EAAlBd,kBAAkB,CAAAe,IAAA;MAAAC,UAAA,EAFjB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}