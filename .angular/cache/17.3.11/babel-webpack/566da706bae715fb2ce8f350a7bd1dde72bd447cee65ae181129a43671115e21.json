{"ast":null,"code":"import { GenericTableComponent } from '../components/generic-table/generic-table.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nconst _c0 = [\"customCell\"];\nfunction TableExampleComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"img\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const key_r3 = ctx.key;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"src\", ctx_r3.getSafeUrl(item_r2[key_r3]), i0.ɵɵsanitizeUrl);\n  }\n}\nexport class TableExampleComponent {\n  ngAfterViewInit() {\n    this.tableConfig.columns.find(col => col.key === 'image').template = this.customCell;\n  }\n  formatTitle(key) {\n    return key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\n  }\n  onRowClick(user) {\n    console.log('Row clicked:', user);\n  }\n  editUser(user) {\n    console.log('Edit user:', user);\n  }\n  deleteUser(user) {\n    console.log('Delete user:', user);\n  }\n  getSafeUrl(imageUrl) {\n    return this.sanitizer.bypassSecurityTrustUrl(imageUrl);\n  }\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n    this.users = [{\n      id: 1,\n      name: 'John Doe',\n      email: 'john@example.com',\n      role: 'Admin',\n      lastLogin: new Date('2023-12-01'),\n      image: 'https://media.istockphoto.com/id/1322104312/photo/freedom-chains-that-transform-into-birds-charge-concept.jpg?s=612x612&w=0&k=20&c=e2XUx498GotTLJn_62tPmsqj6vU48ZEkf0auXi6Ywh0='\n    }, {\n      id: 2,\n      name: 'John Doe 2',\n      email: 'john2@example.com',\n      role: 'Admin2',\n      lastLogin: new Date('2022-12-01'),\n      image: 'https://images.pexels.com/photos/674010/pexels-photo-674010.jpeg?cs=srgb&dl=pexels-anjana-c-169994-674010.jpg&fm=jpg'\n    }\n    // Add more users as needed\n    ];\n    this.customColumnConfigs = {\n      image: {\n        title: 'Profile Picture',\n        sortable: false,\n        template: undefined // Custom template for images\n      },\n      lastLogin: {\n        title: 'Last Login Date',\n        render: item => item.lastLogin.toLocaleDateString()\n      }\n    };\n    this.tableConfig = {\n      columns: Object.keys(this.users[0]).map(key => {\n        const defaultConfig = {\n          key: key,\n          title: this.formatTitle(key),\n          sortable: true,\n          filterable: true\n        };\n        // Merge default config with custom config (if available)\n        return {\n          ...defaultConfig,\n          ...(this.customColumnConfigs[key] || {})\n        };\n      }),\n      actions: [{\n        label: 'Edit',\n        icon: 'fas fa-edit',\n        buttonClass: 'px-3 py-1 rounded-md text-sm font-medium text-white bg-blue-600 hover:bg-blue-700',\n        onClick: user => this.editUser(user)\n      }, {\n        label: 'Delete',\n        icon: 'fas fa-trash',\n        buttonClass: 'px-3 py-1 rounded-md text-sm font-medium text-white bg-red-600 hover:bg-red-700',\n        onClick: user => this.deleteUser(user)\n      }],\n      showSearch: false\n    };\n  }\n  static {\n    this.ɵfac = function TableExampleComponent_Factory(t) {\n      return new (t || TableExampleComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TableExampleComponent,\n      selectors: [[\"app-table-example\"]],\n      viewQuery: function TableExampleComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customCell = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 2,\n      consts: [[\"customCell\", \"\"], [1, \"p-6\"], [1, \"text-2xl\", \"font-bold\", \"mb-4\"], [3, \"rowClick\", \"data\", \"config\"], [1, \"flex\", \"items-center\"], [\"alt\", \"Image\", 1, \"w-5\", \"h5\", \"rounded-full\", 3, \"src\"]],\n      template: function TableExampleComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"h1\", 2);\n          i0.ɵɵtext(2, \"Users Table\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"app-generic-table\", 3);\n          i0.ɵɵlistener(\"rowClick\", function TableExampleComponent_Template_app_generic_table_rowClick_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onRowClick($event));\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(4, TableExampleComponent_ng_template_4_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"data\", ctx.users)(\"config\", ctx.tableConfig);\n        }\n      },\n      dependencies: [GenericTableComponent],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["GenericTableComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r3","getSafeUrl","item_r2","key_r3","ɵɵsanitizeUrl","TableExampleComponent","ngAfterViewInit","tableConfig","columns","find","col","key","template","customCell","formatTitle","replace","str","toUpperCase","onRowClick","user","console","log","editUser","deleteUser","imageUrl","sanitizer","bypassSecurityTrustUrl","constructor","users","id","name","email","role","lastLogin","Date","image","customColumnConfigs","title","sortable","undefined","render","item","toLocaleDateString","Object","keys","map","defaultConfig","filterable","actions","label","icon","buttonClass","onClick","showSearch","ɵɵdirectiveInject","i1","DomSanitizer","selectors","viewQuery","TableExampleComponent_Query","rf","ctx","ɵɵtext","ɵɵlistener","TableExampleComponent_Template_app_generic_table_rowClick_3_listener","$event","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵtemplate","TableExampleComponent_ng_template_4_Template","ɵɵtemplateRefExtractor","encapsulation"],"sources":["/home/xhani-manolis-trungu/generic-table-tailwind/src/app/examples/table-example.component.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { GenericTableComponent } from '../components/generic-table/generic-table.component';\nimport { TableConfig } from '../components/generic-table/interfaces/config.interface';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n  role: string;\n  lastLogin: Date;\n  image: string;\n}\n\n@Component({\n  selector: 'app-table-example',\n  standalone: true,\n  imports: [GenericTableComponent],\n  template: `\n    <div class=\"p-6\">\n      <h1 class=\"text-2xl font-bold mb-4\">Users Table</h1>\n      <app-generic-table\n        [data]=\"users\"\n        [config]=\"tableConfig\"\n        (rowClick)=\"onRowClick($event)\"\n      ></app-generic-table>\n    </div>\n\n    <ng-template #customCell let-item let-key=\"key\">\n      <div class=\"flex items-center\">\n        <img [src]=\"getSafeUrl(item[key])\" alt=\"Image\" class=\"w-5 h5 rounded-full\" />\n      </div>\n    </ng-template>\n  `,\n})\nexport class TableExampleComponent implements AfterViewInit {\n  @ViewChild('customCell') customCell!: TemplateRef<any>;\n  users: User[] = [\n    {\n      id: 1,\n      name: 'John Doe',\n      email: 'john@example.com',\n      role: 'Admin',\n      lastLogin: new Date('2023-12-01'),\n      image:\n        'https://media.istockphoto.com/id/1322104312/photo/freedom-chains-that-transform-into-birds-charge-concept.jpg?s=612x612&w=0&k=20&c=e2XUx498GotTLJn_62tPmsqj6vU48ZEkf0auXi6Ywh0=',\n    },\n    {\n      id: 2,\n      name: 'John Doe 2',\n      email: 'john2@example.com',\n      role: 'Admin2',\n      lastLogin: new Date('2022-12-01'),\n      image:\n        'https://images.pexels.com/photos/674010/pexels-photo-674010.jpeg?cs=srgb&dl=pexels-anjana-c-169994-674010.jpg&fm=jpg',\n    },\n    // Add more users as needed\n  ];\n\n  customColumnConfigs: {\n    [key: string]: Partial<TableConfig<User>['columns'][number]>;\n  } = {\n    image: {\n      title: 'Profile Picture',\n      sortable: false,\n      template: undefined, // Custom template for images\n    },\n    lastLogin: {\n      title: 'Last Login Date',\n      render: (item: User) => item.lastLogin.toLocaleDateString(),\n    },\n  };\n\n  tableConfig: TableConfig<User> = {\n    columns: Object.keys(this.users[0]).map((key) => {\n      const defaultConfig = {\n        key: key as keyof User,\n        title: this.formatTitle(key),\n        sortable: true,\n        filterable: true,\n      };\n\n      // Merge default config with custom config (if available)\n      return { ...defaultConfig, ...(this.customColumnConfigs[key] || {}) };\n    }),\n    actions: [\n      {\n        label: 'Edit',\n        icon: 'fas fa-edit',\n        buttonClass:\n          'px-3 py-1 rounded-md text-sm font-medium text-white bg-blue-600 hover:bg-blue-700',\n        onClick: (user: User) => this.editUser(user),\n      },\n      {\n        label: 'Delete',\n        icon: 'fas fa-trash',\n        buttonClass:\n          'px-3 py-1 rounded-md text-sm font-medium text-white bg-red-600 hover:bg-red-700',\n        onClick: (user: User) => this.deleteUser(user),\n      },\n    ],\n    showSearch: false,\n  };\n\n  ngAfterViewInit(): void {\n    this.tableConfig.columns.find((col) => col.key === 'image')!.template =\n      this.customCell;\n  }\n\n  formatTitle(key: string): string {\n    return key\n      .replace(/([A-Z])/g, ' $1')\n      .replace(/^./, (str) => str.toUpperCase());\n  }\n\n  onRowClick(user: User): void {\n    console.log('Row clicked:', user);\n  }\n\n  editUser(user: User): void {\n    console.log('Edit user:', user);\n  }\n\n  deleteUser(user: User): void {\n    console.log('Delete user:', user);\n  }\n\n  getSafeUrl(imageUrl: string): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(imageUrl);\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}